<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Resco.ImageBox.CF3</name>
    </assembly>
    <members>
        <member name="T:Resco.Controls.ImageBox.RILException">
            <summary>
            Exception of this type can be thrown by <see cref="T:Resco.Controls.ImageBox.ImageBox"/> or
            <see cref="T:Resco.Controls.ImageBox.CompactImage"/> classes.
            </summary>
        </member>
        <member name="M:Resco.Controls.ImageBox.RILException.#ctor">
            <summary>
            Constructs a new and empty exception.
            </summary>
        </member>
        <member name="M:Resco.Controls.ImageBox.RILException.#ctor(System.Int32)">
            <summary>
            Constructs a new exception with specified error code.
            </summary>
            <remarks>
            For the list of possible error codes see <see cref="T:Resco.Controls.ImageBox.RILException.ErrorCode"/>.
            </remarks>
            <param name="code">Error code of the exception as int.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.RILException.#ctor(Resco.Controls.ImageBox.RILException.ErrorCode)">
            <summary>
            Constructs a new exception with specified error code.
            </summary>
            <remarks>
            For the list of possible error codes see <see cref="T:Resco.Controls.ImageBox.RILException.ErrorCode"/>.
            </remarks>
            <param name="code"><see cref="T:Resco.Controls.ImageBox.RILException.ErrorCode"/> of the exception.</param>
        </member>
        <member name="P:Resco.Controls.ImageBox.RILException.Code">
            <summary>
            Gets the error code generated by this exception.
            </summary>
        </member>
        <member name="T:Resco.Controls.ImageBox.RILException.ErrorCode">
            <summary>
            Enumerates the error codes describing the error which caused the
            exception to be thrown.
            </summary>
            <remarks>
            
            </remarks>
        </member>
        <member name="T:Resco.Controls.ImageBox.Zoom">
            <summary>
            Provides several named constants for <see cref="P:Resco.Controls.ImageBox.ImageBox.Zoom"/> property.
            </summary>
            <remarks>
            <see cref="P:Resco.Controls.ImageBox.ImageBox.Zoom"/> property normally takes values greater than 0.
            However these constants are also accepted by 
            <see cref="P:Resco.Controls.ImageBox.ImageBox.Zoom"/> property:<br/>
            <table>
            <tr>
            <td>Name of the constant</td><td>Value of the constant</td><td>Meaning of the constant</td>
            </tr>
            <tr>
            <td>Fit</td><td>-1.0</td><td>The zoom level will automatically be computed
            so that the image entirely fits into the client are of 
            <see cref="T:Resco.Controls.ImageBox.ImageBox"/> control. If the image fits into the client area anyway,
            it will not be zoomed.</td>
            </tr>
            <tr>
            <td>Fill</td><td>-2.0</td><td>The zoom level will automatically be computed
            so that the image fills the entire client are of the
            <see cref="T:Resco.Controls.ImageBox.ImageBox"/> control, if the image is larger than the client area.</td>
            </tr>
            <tr>
            <td>FitAlways</td><td>-3.0</td><td>The zoom level will automatically be computed
            so that the image entirely fits into the client are of 
            <see cref="T:Resco.Controls.ImageBox.ImageBox"/> control.</td>
            </tr>
            <tr>
            <td>FillAlways</td><td>-4.0</td><td>The zoom level will automatically be computed
            so that the image fills the entire client are of the
            <see cref="T:Resco.Controls.ImageBox.ImageBox"/> control.</td>
            </tr>
            </table>
            </remarks>
        </member>
        <member name="F:Resco.Controls.ImageBox.Zoom.Fit">
            <summary>
            If assigned to the <see cref="P:Resco.Controls.ImageBox.ImageBox.Zoom"/> property, the zoom level 
            will automatically be computed
            so that the image entirely fits into the client are of 
            <see cref="T:Resco.Controls.ImageBox.ImageBox"/> control. If the image fits into the client area anyway,
            it will not be zoomed.
            </summary>
        </member>
        <member name="F:Resco.Controls.ImageBox.Zoom.Fill">
            <summary>
            If assigned to the <see cref="P:Resco.Controls.ImageBox.ImageBox.Zoom"/> property, the zoom level 
            will automatically be computed
            so that the image fills the entire client are of the
            <see cref="T:Resco.Controls.ImageBox.ImageBox"/> control, if the image is larger than the client area.
            </summary>
        </member>
        <member name="F:Resco.Controls.ImageBox.Zoom.FitAlways">
            <summary>
            If assigned to the <see cref="P:Resco.Controls.ImageBox.ImageBox.Zoom"/> property, the zoom 
            level will automatically be computed
            so that the image entirely fits into the client are of 
            <see cref="T:Resco.Controls.ImageBox.ImageBox"/> control.
            </summary>
        </member>
        <member name="F:Resco.Controls.ImageBox.Zoom.FillAlways">
            <summary>
            If assigned to the <see cref="P:Resco.Controls.ImageBox.ImageBox.Zoom"/> property, the zoom 
            level will automatically be computed
            so that the image fills the entire client are of the
            <see cref="T:Resco.Controls.ImageBox.ImageBox"/> control.
            </summary>
        </member>
        <member name="T:Resco.Controls.ImageBox.ScrollBarMode">
            <summary>
            Enumerates the valid values of the <see cref="P:Resco.Controls.ImageBox.ImageBox.ScrollBarMode"/>
            property.
            </summary>
        </member>
        <member name="F:Resco.Controls.ImageBox.ScrollBarMode.Hidden">
            <summary>
            The scroll bars are always hidden, even if they
            are needed to scroll to the other part of the image.
            </summary>
        </member>
        <member name="F:Resco.Controls.ImageBox.ScrollBarMode.Auto">
            <summary>
            The scroll bars are always visible, even
            if they are not needed, because the entire image fits into the
            client area of the <b>ImageBox</b>.
            </summary>
        </member>
        <member name="F:Resco.Controls.ImageBox.ScrollBarMode.Visible">
            <summary>
            The scroll bars are displayed automatically,
            if they are needed.
            </summary>
        </member>
        <member name="T:Resco.Controls.ImageBox.PenMode">
            <summary>
            Enumerates the valid values of the <see cref="P:Resco.Controls.ImageBox.ImageBox.PenMode"/> property.
            </summary>
        </member>
        <member name="F:Resco.Controls.ImageBox.PenMode.None">
            <summary>
            Clicking the mouse inside the image has no effect.
            This is the only mode when MouseDown, MouseUp and MouseMove events are raised.
            </summary>
        </member>
        <member name="F:Resco.Controls.ImageBox.PenMode.Move">
            <summary>
            Clicking and dragging the mouse over the client area
            scrolls the image. The user can also use his finger to scroll, he does
            not need to use the stylus.
            </summary>
        </member>
        <member name="F:Resco.Controls.ImageBox.PenMode.Crop">
            <summary>
            Setting this property to <b>Crop</b> value automatically
            displays the cropping rectangle (its coordinates are taken from the
            <see cref="!:CropBounds"/> property) and user can use the mouse to
            change the coordinates of this cropping rectangle.
            </summary>
        </member>
        <member name="T:Resco.Controls.ImageBox.ImageBox">
            <summary>
            Provides graphical user inteface to display image contained in 
            <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> object.
            </summary>
            <remarks>
            <b>ImageBox</b> can be used to display <b>CompactImage</b> objects which
            hold an image. Several methods can be used to manipulate the displayed
            image. These manipulations, however, do not change the image contained
            in the <b>CopmactImage</b> object. This means, that even for an image
            with lossy compression (such as jpeg) performing an operation (such
            as 90 degrees clockwise rotation) and then performing an inverse operation
            (a 90 degrees counter clockwise rotation) yields exactly the same
            output as the original one.
            </remarks>
            <seealso cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/>
        </member>
        <member name="M:Resco.Controls.ImageBox.ImageBox.#ctor">
            <summary>
            Constructs a new <b>ImageBox</b> object.
            </summary>
        </member>
        <member name="M:Resco.Controls.ImageBox.ImageBox.LoadImage(System.String)">
            <summary>
            Creates a new <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> object, loads an image from
            a file system into it and displays it using <b>ImageBox</b>.
            </summary>
            <remarks>
            This method creates a new <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> object, loads
            an image into it from the file system. The path to the image is
            specified in the <b>path</b> parameter. The format of the image
            is recognized from the extension of the file. It then assigns the 
            <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> object to the 
            <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> property and displays it.
            </remarks>
            <param name="path">A path to the file in the file system that
            should be displayed.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.ImageBox.LoadImage(System.String,System.Int32)">
            <summary>
            Creates a new <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> object, loads an image from
            a file system into it with specified frame number
            and displays it using <b>ImageBox</b>.
            </summary>
            <remarks>
            This method creates a new <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> object, loads
            an image into it from the file system. The path to the image is
            specified in the <b>path</b> parameter. The format of the image
            is recognized from the extension of the file. The <b>frame</b>
            parameter specifies the frame number of the image that should be loaded.
            Numbering of the frames is zero based. That means, if you want to load
            the first frame, put 0 into the <b>frame</b> parameter. Once
            this is done, <see cref="T:Resco.Controls.ImageBox.ImageBox"/> then assigns the 
            <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> object to the 
            <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> property and displays it.
            </remarks>
            <param name="path">A path to the file in the file system that
            should be displayed.</param>
            <param name="frame">Number of frame to load.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.ImageBox.LoadImage(System.Uri)">
            <summary>
            Creates a new <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> object, loads an image from
            the specified ULR into it and displays it using <b>ImageBox</b>.
            </summary>
            <remarks>
            This method creates a new <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> object, loads
            an image into it from the specified URL. The URL of the image is
            specified in the <b>url</b> parameter. The format of the image
            is recognized from the extension of the file. <see cref="T:Resco.Controls.ImageBox.ImageBox"/>
            then assigns the 
            <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> object to the 
            <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> property and displays it.
            </remarks>
            <param name="url">URL to the file that should be loaded and displayed.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.ImageBox.LoadImage(System.Uri,System.Int32)">
            <summary>
            Creates a new <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> object, loads an image from
            the specified ULR into it and displays it using <b>ImageBox</b>.
            </summary>
            <remarks>
            This method creates a new <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> object, loads
            an image into it from the specified URL. The URL of the image is
            specified in the <b>url</b> parameter. The format of the image
            is recognized from the extension of the file. The <b>frame</b>
            parameter specifies the frame number of the image that should be loaded.
            Numbering of the frames is zero based. That means, if you want to load
            the first frame, put 0 into the <b>frame</b> parameter. Once
            this is done, <see cref="T:Resco.Controls.ImageBox.ImageBox"/> then assigns the
            <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> object to the 
            <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> property and displays it.
            </remarks>
            <param name="url">URL to the file that should be loaded and displayed.</param>
            <param name="frame">Number of frame to load.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.ImageBox.LoadImage(System.IO.Stream,Resco.Controls.ImageBox.ImageFormat)">
            <summary>
            Creates a new <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> object, loads an image from
            the specified stream into it and displays it using <b>ImageBox</b>.
            </summary>
            <remarks>
            This method creates a new <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> object, loads
            an image into it from the specified stream. The stream which contains
            the image is
            specified in the <b>stream</b> parameter. The format of the image
            is provided in the <b>iamgeFormat</b> parameter. The
            <see cref="T:Resco.Controls.ImageBox.ImageBox"/> then assigns the
            <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> object to the 
            <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> property and displays it.
            </remarks>
            <param name="stream">Stream to load the image from.</param>
            <param name="imageFormat">Specifies the format of the image. For
            the list of valid values <see cref="T:Resco.Controls.ImageBox.ImageFormat"/>.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.ImageBox.LoadImage(System.IO.Stream,Resco.Controls.ImageBox.ImageFormat,System.Int32)">
            <summary>
            Creates a new <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> object, loads an image from
            the specified stream into it with specified frame number and displays it using <b>ImageBox</b>.
            </summary>
            <remarks>
            This method creates a new <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> object, loads
            an image into it from the specified stream. The stream which contains
            the image is
            specified in the <b>stream</b> parameter. The format of the image
            is provided in the <b>imageFormat</b> parameter. The <b>frame</b>
            parameter specifies the frame number of the image that should be loaded.
            Numbering of the frames is zero based. That means, if you want to load
            the first frame, put 0 into the <b>frame</b> parameter. The
            <see cref="T:Resco.Controls.ImageBox.ImageBox"/> then assigns the
            <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> object to the 
            <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> property and displays it.
            </remarks>
            <param name="stream">Stream to load the image from.</param>
            <param name="imageFormat">Specifies the format of the image. For
            the list of valid values <see cref="T:Resco.Controls.ImageBox.ImageFormat"/>.</param>
            <param name="frame">The number of frame to load.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.ImageBox.SaveImage(System.String,System.Int32)">
            <summary>
            Saves the image to the file system specifying the quality.
            </summary>
            <remarks>
            <p>
            Method saves the image to the file system to a file specified in
            <b>path</b> parameter. The file format is determined from the extension
            of the file.
            </p>
            <p>
            The <b>quality</b> parameter is only relevant for those file formats
            which use lossy compression. It is set in percentage, so the valid
            values are 0 to 100.
            </p>
            </remarks>
            <param name="path">Path to the file to save the image to.</param>
            <param name="quality">Quality value from 0 to 100.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Resco.Controls.ImageBox.ImageBox.SaveImage(System.IO.Stream,Resco.Controls.ImageBox.ImageFormat,System.Int32)" -->
        <member name="M:Resco.Controls.ImageBox.ImageBox.Crop">
            <summary>
            Crops the image reducing its dimensions.
            </summary>
            <remarks>
            The cropping rectangle is determined by
            <see cref="P:Resco.Controls.ImageBox.ImageBox.CropBounds"/> property. This method directly changes the
            underlying <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> object, so the only way to 
            revert this change is to reload the image from its original location.
            </remarks>
        </member>
        <member name="M:Resco.Controls.ImageBox.ImageBox.Crop(System.Drawing.Rectangle)">
            <summary>
            Crops the image to its smaller portion specified by <b>cropBounds</b>
            parameter.
            </summary>
            <remarks>
            The cropping rectangle is meant relative to the image, not to the
            <see cref="T:Resco.Controls.ImageBox.ImageBox"/>.
            </remarks>
            <param name="cropBounds">Defines the cropping rectangle.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.ImageBox.SuspendRedraw">
            <summary>
            Temporarily suspends the redraw for the control.
            </summary>
            <remarks>Control is not redrawn.</remarks>
        </member>
        <member name="M:Resco.Controls.ImageBox.ImageBox.ResumeRedraw">
            <summary>
            Resumes normal redraw and immediately redraws control.
            </summary>
            <remarks>Redraws and invalidates the control.</remarks>
        </member>
        <member name="M:Resco.Controls.ImageBox.ImageBox.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Resco.Controls.ImageBox.ImageBox"/> and its child controls and optionally releases the managed resources.
            </summary>
            <remarks>
            This method is called by the public Dispose() method and the Finalize method. Dispose() invokes the protected Dispose(Boolean) method with the disposing parameter set to true. Finalize invokes Dispose with disposing set to false.
            When the disposing parameter is true, this method releases all resources held by any managed objects that this Control references. This method invokes the Dispose() method of each referenced object.
            Notes to Inheritors: 
            Dispose can be called multiple times by other objects. When overriding Dispose(Boolean) be careful not to reference objects that have been previously disposed of in an earlier call to Dispose.
            </remarks>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.ImageBox.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            If <see cref="P:Resco.Controls.ImageBox.ImageBox.PenMode"/> property is set to <see cref="!:PenMode.None"/>,
            raises the <see cref="!:MouseDown"/> event. Else implements the algorithm
            corresponding to the value of <see cref="P:Resco.Controls.ImageBox.ImageBox.PenMode"/>.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.ImageBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            If <see cref="P:Resco.Controls.ImageBox.ImageBox.PenMode"/> property is set to <see cref="!:PenMode.None"/>,
            raises the <see cref="!:MouseUp"/> event. Else implements the algorithm
            corresponding to the value of <see cref="P:Resco.Controls.ImageBox.ImageBox.PenMode"/>.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.ImageBox.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            If <see cref="P:Resco.Controls.ImageBox.ImageBox.PenMode"/> property is set to <see cref="!:PenMode.None"/>,
            raises the <see cref="!:MouseMove"/> event. Else implements the algorithm
            corresponding to the value of <see cref="P:Resco.Controls.ImageBox.ImageBox.PenMode"/>.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.ImageBox.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the background of the control.
            </summary>
            <remarks>The implementation of this method is currently empty to avoid
            flickering,
            because the <see cref="M:Resco.Controls.ImageBox.ImageBox.OnPaint(System.Windows.Forms.PaintEventArgs)"/> method always paints the whole
            client area of the control.</remarks>
            <param name="e">A PaintEventArgs that contains information about the control to paint. </param>
        </member>
        <member name="M:Resco.Controls.ImageBox.ImageBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the image into the client area and raises the <see cref="!:Paint"/> event.
            </summary>
            <remarks>
            Since <see cref="T:Resco.Controls.ImageBox.ImageBox"/> control only paints the underlying
            <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> object into its client area, further painting
            (by handling the <see cref="!:Paint"/> event) does not affect the
            underlying <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/>.
            </remarks>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.ImageBox.OnResize(System.EventArgs)">
            <summary>
            Raises the <see cref="!:Resize"/> event and refreshes the <see cref="T:Resco.Controls.ImageBox.ImageBox"/>.
            </summary>
            <param name="e">An EventArgs that contains the event data. </param>
        </member>
        <member name="P:Resco.Controls.ImageBox.ImageBox.CompactImage">
            <summary>
            Gets or sets a <see cref="P:Resco.Controls.ImageBox.ImageBox.CompactImage"/> object assigned to the
            <b>ImageBox</b>.
            </summary>
            <remarks>
            Setting a <b>CompactImage</b> object to this property makes
            the <b>ImageBox</b> display the image.
            </remarks>
        </member>
        <member name="P:Resco.Controls.ImageBox.ImageBox.Zoom">
            <summary>
            Zooms the displayed image by specified factor.
            </summary>
        </member>
        <member name="P:Resco.Controls.ImageBox.ImageBox.Rotation">
            <summary>
            Gets or sets the Rotation value specifying the rotation 
            angle of the image. The image can be rotated 90, 180 or 270 degrees
            clockwise or counter clockwise.
            </summary>
        </member>
        <member name="P:Resco.Controls.ImageBox.ImageBox.Origin">
            <summary>
            Gets or sets the origin of the painted image.
            </summary>
            <remarks>
            The origin of the image is its upper-left pixel. The default value
            is (0, 0) which means that the image will be drawn with its upper-left
            pixel placed in the upper-left corner of the control. You can set
            other pixel to be displayed in the upper-left corner of the control
            and shift the entire image in either direction.
            </remarks>
        </member>
        <member name="P:Resco.Controls.ImageBox.ImageBox.Brightness">
            <summary>
            Gets or sets the brightness of the displayed image.
            </summary>
        </member>
        <member name="P:Resco.Controls.ImageBox.ImageBox.Contrast">
            <summary>
            Gets or sets the contrast of the displayed image.
            </summary>
        </member>
        <member name="P:Resco.Controls.ImageBox.ImageBox.Gamma">
            <summary>
            Gets or sets the gamma correction value of the displayed image.
            </summary>
        </member>
        <member name="P:Resco.Controls.ImageBox.ImageBox.GammaRed">
            <summary>
            Gets or sets the gamma correction value of the red channel of the image.
            </summary>
        </member>
        <member name="P:Resco.Controls.ImageBox.ImageBox.GammaGreen">
            <summary>
            Gets or sets the gamma correction value of the green channel of the image.
            </summary>
        </member>
        <member name="P:Resco.Controls.ImageBox.ImageBox.GammaBlue">
            <summary>
            Gest or sets the gamma correction value of the blue channel of the image.
            </summary>
        </member>
        <member name="P:Resco.Controls.ImageBox.ImageBox.Invert">
            <summary>
            Gets or sets a value indicating whether the colors of the image
            should be inverted.
            </summary>
        </member>
        <member name="P:Resco.Controls.ImageBox.ImageBox.CropBounds">
            <summary>
            Gets or sets the the cropping rectangle used to crop the image.
            </summary>
        </member>
        <member name="P:Resco.Controls.ImageBox.ImageBox.ScrollBarWidth">
            <summary>
            Gets or sets the width of the scroll bars.
            </summary>
        </member>
        <member name="P:Resco.Controls.ImageBox.ImageBox.ScrollBarMode">
            <summary>
            Gets or sets the mode of the scroll bars.
            </summary>
            <remarks>
            The scroll bars' behavior is determined by their mode.
            The modes are:<br/>
            <table>
            <tr>
            <td>Hidden</td><td>The scroll bars are always hidden, even if they
            are needed to scroll to the other part of the image.</td>
            </tr>
            <tr>
            <td>Visible</td><td>The scroll bars are always visible, even
            if they are not needed, because the entire image fits into the
            client area of the <b>ImageBox</b>.</td>
            </tr>
            <tr>
            <td>Auto</td><td>The scroll bars are displayed automatically,
            if they are needed.</td>
            </tr>
            </table>
            </remarks>
        </member>
        <member name="P:Resco.Controls.ImageBox.ImageBox.PenMode">
            <summary>
            Gets or sets the behavior of the mouse cursor which serves as a pen over
            the image.
            </summary>
            <remarks>
            The values have the following meaning:
            <table>
            <tr><td>None</td><td>Clicking the mouse inside the image has no effect.
            This is the only mode when MouseDown, MouseUp and MouseMove events are raised.</td></tr>
            <tr><td>Move</td><td>Clicking and dragging the mouse over the client area
            scrolls the image. The user can also use his finger to scroll, he does
            not need to use the stylus.</td></tr>
            <tr><td>Crop</td><td>Setting this property to <b>Crop</b> value automatically
            displays the cropping rectangle (its coordinates are taken from the
            <see cref="P:Resco.Controls.ImageBox.ImageBox.CropBounds"/> property) and user can use the mouse to
            change the coordinates of this cropping rectangle.</td></tr>
            </table>
            </remarks>
        </member>
        <member name="P:Resco.Controls.ImageBox.ImageBox.DrawingMode">
            <summary>
            Sets the drawing mode of the <see cref="T:Resco.Controls.ImageBox.ImageBox"/>.
            </summary>
            <remarks>
            <see cref="T:Resco.Controls.ImageBox.ImageBox"/> can paint the picture in two modes:<br/>
            Fast - paints the picture with emphasis to speed.<br/>
            Best - paints the picture with emphasis to quality.<br/>
            </remarks>
        </member>
        <member name="P:Resco.Controls.ImageBox.ImageBox.BackColor">
            <summary>
            Gets or sets the background color for the <b>ImageBox</b>.
            </summary>
        </member>
        <member name="T:Resco.Controls.ImageBox.ProgressEventArgs">
            <summary>
            Contains data for required by <see cref="F:Resco.Controls.ImageBox.ProgressEventArgs.Progress"/> event.
            </summary>
        </member>
        <member name="T:Resco.Controls.ImageBox.ImageFormat">
            <summary>
            Enumerates the valid values of an image format. 
            </summary>
            <seealso cref="!:ImageBox.Load"/>
            <seealso cref="!:ImageBox.Save"/>
        </member>
        <member name="F:Resco.Controls.ImageBox.ImageFormat.Jpg">
            <summary>
            JPEG file format.
            </summary>
        </member>
        <member name="F:Resco.Controls.ImageBox.ImageFormat.Png">
            <summary>
            PNG file format.
            </summary>
        </member>
        <member name="F:Resco.Controls.ImageBox.ImageFormat.Tiff">
            <summary>
            TIFF file format.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Resco.Controls.ImageBox.LoadOptions" -->
        <member name="T:Resco.Controls.ImageBox.Rotation">
            <summary>
            Enumerates the angles of rotation used by <see cref="!:Rotate"/> method.
            </summary>
            <remarks>
            <see cref="!:Rotate"/> method rotates the image by an angle specified by
            <see cref="T:Resco.Controls.ImageBox.Rotation"/> parameter. The following values are valid:<br/>
            <table>
            <tr>
            <td>None</td><td>Does not rotate the image. This value has a meaning
            for <see cref="P:Resco.Controls.ImageBox.ImageBox.Rotation"/> property.</td>
            </tr>
            <tr>
            <td>Left90</td><td>Rotates the image counter clockwise by 90 degrees.</td>
            </tr>
            /// <tr>
            <td>Left180</td><td>Rotates the image counter clockwise by 180 degrees.</td>
            </tr>
            /// <tr>
            <td>Left270</td><td>Rotates the image counter clockwise by 270 degrees.</td>
            </tr>
            <tr>
            <td>Right90</td><td>Rotates the image clockwise by 90 degrees.</td>
            </tr>
            <tr>
            <td>Right180</td><td>Rotates the image clockwise by 180 degrees.</td>
            </tr>
            <tr>
            <td>Right270</td><td>Rotates the image clockwise by 270 degrees.</td>
            </tr>
            </table>
            </remarks>
            <seealso cref="!:Rotate"/>
        </member>
        <member name="T:Resco.Controls.ImageBox.DrawingMode">
            <summary>
            Enumerates the possible values of the drawing mode of the control.
            </summary>
        </member>
        <member name="T:Resco.Controls.ImageBox.CompactImage">
            <summary>
            Represents an image.
            </summary>
            <remarks>
            <p>
            Objects of this class hold an image. This class provides no graphical
            user interface. It provides methods and properties for loading manipulating 
            and saving the
            image.
            </p>
            <p>
            You can use an <see cref="T:Resco.Controls.ImageBox.ImageBox"/> control to display the image.
            <see cref="T:Resco.Controls.ImageBox.ImageBox"/> control serves as a graphical interface class
            designed only to display images of type <b>CompactImage</b>. Performing
            operations on the image change the image data directly. This means that
            for some file formats (such as jpeg) rotating the image left by 90 degrees
            and then right by 90 degrees does not yield exactly the original image.
            </p>
            <p>
            Supported file formats include:
            <ul>
            <li>tiff with no compression or with lzw compression. Tiff with zip
            compression is not supported.</li>
            <li>jpg</li>
            <li>png</li>
            </ul>
            </p>
            </remarks>
            <seealso cref="T:Resco.Controls.ImageBox.ImageBox"/>
        </member>
        <member name="M:Resco.Controls.ImageBox.CompactImage.#ctor">
            <summary>
            Constructs a new and empty <b>CompactImage</b> object.
            </summary>
        </member>
        <member name="M:Resco.Controls.ImageBox.CompactImage.Dispose">
            <summary>
            Releases all resources used by the <b>CompactImage</b>.
            </summary>
        </member>
        <member name="M:Resco.Controls.ImageBox.CompactImage.Load(System.String)">
            <summary>
            Loads a new image into <b>CompactImage</b> object from the file system.
            </summary>
            <remarks>
            <p>
            Method loads an image from a file stored in the file system into the
            <b>CompactImage</b> object. If there was an image in the object before,
            it is automtically lost.
            </p>
            <p>
            Supported file formats include:
            <ul>
            <li>tiff with no compression or with lzw compression. Tiff with zip
            compression is not supported.</li>
            <li>jpg</li>
            <li>png</li>
            </ul>
            </p>
            <p>
            File format si recognized from the file's extension. In case of .tiff file
            format, the extension can be .tif as well as .tiff. In case of .jpg file
            format, the extension can be .jpg as well as .jpeg.
            </p>
            </remarks>
            <exception cref="T:Resco.Controls.ImageBox.RILException">There was an error loading the image. 
            <see cref="P:Resco.Controls.ImageBox.RILException.Code"/> determines the type of error.
            </exception>
            <exception cref="T:Resco.Controls.ImageBox.RILException">There was an error loading the image. 
            <see cref="P:Resco.Controls.ImageBox.RILException.Code"/> determines the type of error.
            </exception>
            <param name="path">A path to the image file in the file system which
            should be loaded.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Resco.Controls.ImageBox.CompactImage.Load(System.String,System.Drawing.Color,Resco.Controls.ImageBox.LoadOptions,System.Drawing.Size)" -->
        <member name="M:Resco.Controls.ImageBox.CompactImage.Load(System.String,System.Int32,System.Drawing.Color,Resco.Controls.ImageBox.LoadOptions,System.Drawing.Size)">
            <summary>
            Loads a new image into <b>CompactImage</b> object specifying the frame number, background color,
            load options and size from the file system.
            </summary>
            <remarks>
            <p>
            Method loads an image from a file stored in the file system into the
            <b>CompactImage</b> object. If there was an image in the object before,
            it is automtically lost.
            </p>
            <p>
            Supported file formats include:
            <ul>
            <li>tiff with no compression or with lzw compression. Tiff with zip
            compression is not supported.</li>
            <li>jpg</li>
            <li>png</li>
            </ul>
            </p>
            <p>
            File format si recognized from the file's extension. In case of .tiff file
            format, the extension can be .tif as well as .tiff. In case of .jpg file
            format, the extension can be .jpg as well as .jpeg.
            </p>
            <p>
            If the loaded file contains a multiframe image, you can specify
            the frame number, which should be loaded using the <b>frame</b>
            parameter. The numbering of frames is zero based, so if you want
            to load the first frame, you must set frame parameter to 0.
            </p>
            </remarks>
            <exception cref="T:Resco.Controls.ImageBox.RILException">There was an error loading the image. 
            <see cref="P:Resco.Controls.ImageBox.RILException.Code"/> determines the type of error.
            </exception>
            <param name="path">A path to the image file in the file system which
            should be loaded.</param>
            <param name="frame">Frame number, if the image is multiframed.</param>
            <param name="backgroundColor"><see cref="T:Resco.Controls.ImageBox.LoadOptions"/></param>
            <param name="loadOptions"><see cref="T:Resco.Controls.ImageBox.LoadOptions"/></param>
            <param name="maxSize"><see cref="T:Resco.Controls.ImageBox.LoadOptions"/></param>
        </member>
        <member name="M:Resco.Controls.ImageBox.CompactImage.Load(System.Uri)">
            <summary>
            Loads an image from the specified URL.
            </summary>
            <param name="url">Specifies the URL to load an image from.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.CompactImage.Load(System.Uri,System.Drawing.Color,Resco.Controls.ImageBox.LoadOptions,System.Drawing.Size)">
            <summary>
            Loads an image from the specified URL, further specifying the
            background color, load options and size of the image.
            </summary>
            <param name="url">URL to load the image from.</param>
            <param name="backgroundColor">Not supported yet.</param>
            <param name="loadOptions">Not supported yet.</param>
            <param name="maxSize">Not supported yet.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.CompactImage.Load(System.Uri,System.Int32,System.Drawing.Color,Resco.Controls.ImageBox.LoadOptions,System.Drawing.Size)">
            <summary>
            Loads an image from the specified URL further specifying the frame
            number, background color, load options and size of the image.
            </summary>
            <param name="url">URL to load the image from.</param>
            <param name="frame"></param>
            <param name="backgroundColor">Not supported yet.</param>
            <param name="loadOptions">Not supported yet.</param>
            <param name="maxSize">Not supported yet.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.CompactImage.Load(System.IO.Stream,Resco.Controls.ImageBox.ImageFormat)">
            <summary>
            Loads image from the specified stream.
            </summary>
            <remarks>
            The file format can not be determined from the data. It has to be
            provided using <b>imageFormat</b> parameter.
            </remarks>
            <exception cref="!:">
            </exception>
            <param name="stream">Stream to load the data from.</param>
            <param name="imageFormat">Format of the image.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.CompactImage.Load(System.IO.Stream,Resco.Controls.ImageBox.ImageFormat,System.Drawing.Color,Resco.Controls.ImageBox.LoadOptions,System.Drawing.Size)">
            <summary>
            Loads image from the specified stream further specifying the image format,
            background color, load options and size of the image.
            </summary>
            <remarks>
            The file format can not be determined from the data. It has to be
            provided using <b>imageFormat</b> parameter.
            </remarks>
            <exception cref="!:">
            </exception>
            <param name="stream">Stream to load the data from.</param>
            <param name="imageFormat">Format of the image.</param>
            <param name="backgroundColor">Not supported yet.</param>
            <param name="loadOptions">Not supported yet.</param>
            <param name="maxSize">Not supported yet.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.CompactImage.Load(System.IO.Stream,Resco.Controls.ImageBox.ImageFormat,System.Int32,System.Drawing.Color,Resco.Controls.ImageBox.LoadOptions,System.Drawing.Size)">
            <summary>
            Loads image from the specified stream further specifying the image format,
            frame number,
            background color, load options and size of the image.
            </summary>
            <param name="stream">Stream to load the data from.</param>
            <param name="imageFormat">Format of the image.</param>
            <param name="frame">The number of frame to load.</param>
            <param name="backgroundColor">Not supported yet.</param>
            <param name="loadOptions">Not supported yet.</param>
            <param name="maxSize">Not supported yet.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.CompactImage.Save(System.String,System.Int32)">
            <summary>
            Saves the image to the file system with specified quality.
            </summary>
            <remarks>
            <p>
            Method saves the image to the file system to a file specified in
            <b>path</b> parameter. The file format is determined from the extension
            of the file. See <see cref="M:Resco.Controls.ImageBox.CompactImage.Load(System.String)"/> method to find out supported 
            file formats.
            </p>
            <p>
            The <b>quality</b> parameter is only relevant for those file formats
            which use lossy compression. It is set in percentage, so the valid
            values are 0 to 100.
            </p>
            </remarks>
            <param name="path">A path to file to save to.</param>
            <param name="quality">Quality of the output file. The
            valid values are from 0 to 100.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.CompactImage.Save(System.IO.Stream,Resco.Controls.ImageBox.ImageFormat,System.Int32)">
            <summary>
            Saves the image to a stream, specifying the file format and quality.
            </summary>
            <remarks>
            <p>
            Method saves the image to the specified stream. The file format must 
            also be specified.
            </p>
            <p>
            The <b>quality</b> parameter is only relevant for those file formats
            which use lossy compression. It is set in percentage, so the valid
            values are 0 to 100.
            </p>
            </remarks>
            <param name="stream">Stream object to save the image to.</param>
            <param name="imageFormat">File format to save the image to.</param>
            <param name="quality">Quality of the output file. The
            valid values are from 0 to 100.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.CompactImage.Resize(System.Single)">
            <summary>
            Resizes the image by specified factor.
            </summary>
            <remarks>
            Method resizes the image proportionally by multiplying both dimensions
            of the image by the factor. If the dimensions of the image are x and y,
            the dimensions after applying Resize will be x * factor and y * factor.
            This implies, that if the factor is greater than 0 and less than 1, 
            the image will be reduced. If the factor is greater than 1, the image
            will be enlarged.
            </remarks>
            <exception cref="!:">
            </exception>
            <param name="factor">The resize factor.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.CompactImage.Rotate(Resco.Controls.ImageBox.Rotation)">
            <summary>
            Rotate image in specified direction.
            </summary>
            <remarks>
            Rotates the image in a 90 or 180 degrees angle. The angle is specified
            using an enumaration parameter. For the valid values
            <see cref="T:Resco.Controls.ImageBox.Rotation"/>.
            </remarks>
            <param name="rotation">Specifies the angle of rotation.</param>
            <seealso cref="T:Resco.Controls.ImageBox.Rotation"/>
        </member>
        <member name="M:Resco.Controls.ImageBox.CompactImage.Crop(System.Drawing.Rectangle)">
            <summary>
            Crops the image to specified region reducing its size.
            </summary>
            <remarks>
            The cropping rectangle specifies the portion of the image relative
            to the original image, which will remaina after performing Crop.
            </remarks>
            <exception cref="!:">
            </exception>
            <param name="rect">The cropping rectangle specifying the portion
            of the newly created image.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.CompactImage.AdjustBrightness(System.SByte)">
            <summary>
            Adjusts brightness of the image.
            </summary>
            <remarks>
            Changes the amount of brightness of the image. Positive values increase
            the brightness, negavite values decrease it.
            </remarks>
            <param name="change">The amount of brigthness to adjust.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.CompactImage.AdjustContrast(System.SByte)">
            <summary>
            Adjusts contrast of the image.
            </summary>
            <remarks>
            Changes the amount of contrast of the image. Positive values increase
            the contrast, negavite values decrease it.
            </remarks>
            <param name="change">The amount of contrast to adjust.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.CompactImage.AdjustGamma(System.SByte)">
            <summary>
            Adjusts gamma correction value.
            </summary>
            <remarks>
            Changes the amount of gamma correction value. Positive values increase
            the gamma correction value, negavite values decrease it.
            </remarks>
            <param name="change">Specifies the amount of gamma correction.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.CompactImage.AdjustGamma(System.SByte,System.SByte,System.SByte)">
            <summary>
            Adjusts gamma correction value separately for each color channel.
            </summary>
            <remarks>
            Changes the amount of gamma correction value. The amount of correction
            is specified separately for each color channel. Positive values increase
            the gamma correction value of the channel, negavite values decrease it.
            </remarks>
            <param name="redChange">Specifies the amount of gamma correction for red channel.</param>
            <param name="greenChange">Specifies the amount of gamma correction for green channel.</param>
            <param name="blueChange">Specifies the amount of gamma correction for blue channel.</param>
        </member>
        <member name="M:Resco.Controls.ImageBox.CompactImage.Invert">
            <summary>
            Inverts colors of the image.
            </summary>
        </member>
        <member name="P:Resco.Controls.ImageBox.CompactImage.Size">
            <summary>
            Gets the size of the image.
            </summary>
            <remarks>
            Gets the dimensions of the image in a Size struct.
            </remarks>
        </member>
        <member name="P:Resco.Controls.ImageBox.CompactImage.Depth">
            <summary>
            Gets the color depth of the image.
            </summary>
        </member>
        <member name="P:Resco.Controls.ImageBox.CompactImage.NumberOfFrames">
            <summary>
            Gets the number of frames the image contains.
            </summary>
            <remarks>
            For those file formats which do not support multiple frames (e.g. jpeg)
            this property always returns 1. For others the actual number of frames
            is returned.
            </remarks>
            <seealso cref="P:Resco.Controls.ImageBox.CompactImage.LoadedFrame"/>
        </member>
        <member name="P:Resco.Controls.ImageBox.CompactImage.LoadedFrame">
            <summary>
            Gets the number of frame which was loaded into <see cref="T:Resco.Controls.ImageBox.CompactImage"/> object.
            </summary>
            <remarks>
            For those file formats which do not support multiple frames (e.g. jpeg)
            this property always returns 0 (the numbering of the frames is zero
            based). For others the actual frame number
            is returned.
            </remarks>
        </member>
        <member name="E:Resco.Controls.ImageBox.CompactImage.Changed">
            <summary>
            Event is fired whenever the image is changed.
            </summary>
            <remarks>
            The image is changed, if methods which change it are called or if a new
            image is loaded into the object using the <b>Load</b> method.
            </remarks>
        </member>
        <member name="E:Resco.Controls.ImageBox.CompactImage.Progress">
            <summary>
            Event is fired repeatedly during save or load.
            </summary>
            <remarks>
            Each time that <b>Save</b> or <b>Load</b> methods are called.
            </remarks>
            <seealso cref="T:Resco.Controls.ImageBox.ProgressEventArgs"/>
        </member>
    </members>
</doc>
